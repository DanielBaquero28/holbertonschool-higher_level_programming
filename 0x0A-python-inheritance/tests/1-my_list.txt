=======================
Doctest in 1-my_list.py
=======================

This is a .txt file that tests all of the edge cases of the program:
1-my_list.py

It has one function: print_sorted()

``print_sorted()`` prints the list in ascendent order.

MyList is an instance of list

       	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> isinstance(my_list, list)
	True

MyList is a subclass of list

	>>> issubclass (MyList, list)
	True

Type list is of type

	>>> type(list)
	<class 'type'>

Type of the unsorted list

	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

Type of sorted list

	>>> my_list = MyList()
	>>> type(my_list.print_sorted)
	<class 'method'>

Empty list

	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

my_list and MyList are of the same type

	>>> my_list = MyList()
    	>>> type(my_list) == MyList
    	True

Normal case with numbers

	>>> my_list = MyList()
    	>>> my_list += [0]
    	>>> my_list.append(4)
    	>>> my_list.append(1)
    	>>> my_list.append(10)
    	>>> my_list.append(3)
    	>>> my_list.append(7)
    	>>> my_list.print_sorted()
    	[0, 1, 3, 4, 7, 10]

Appending only one number to the list.

	>>> my_list = MyList()
	>>> my_list.append(10)
	>>> my_list.print_sorted()
	[10]

Appending negative and positive numbers and repeating a number.

	>>> my_list = MyList()
	>>> my_list.append(-12)
	>>> my_list.append(10)
	>>> my_list.append(-8)
	>>> my_list.append(6)
	>>> my_list.append(-4)
	>>> my_list.append(2)
	>>> my_list.append(-1)
	>>> my_list.append(0)
	>>> my_list.append(0)
	>>> my_list.print_sorted()
	[-12, -8, -4, -1, 0, 0, 2, 6, 10]

Appending 0 as 0, 00, 000, 0000

	>>> my_list = MyList()
        >>> my_list.append(0)
        >>> my_list.append(0)
        >>> my_list.append(00)
        >>> my_list.append(000)
        >>> my_list.append(00)
        >>> my_list.append(0000)
        >>> my_list.append(00000)
        >>> my_list.append(000)
        >>> my_list.append(0)
        >>> my_list.print_sorted()
	[0, 0, 0, 0, 0, 0, 0, 0, 0]
