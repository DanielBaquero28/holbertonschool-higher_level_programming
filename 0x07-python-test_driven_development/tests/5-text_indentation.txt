=============================
Doctest in 5-text_indentation.py
=============================

This is a .txt file that tests all of the edge cases of the program:
5-text_indentation.py

It has one function: text_indentation()

Strings
=======

``text_indentation()`` prints text and after finding: ., ?, or : it prints two new lines after.

::

	>>> text_indentation = __import__('5-text_indentation').text_indentation

Accepts a long text.

::

	>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
	Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    	<BLANKLINE>
    	Quonam modo?
    	<BLANKLINE>
    	Utrum igitur tibi litteram videor an totas paginas commovere?
    	<BLANKLINE>
    	Non autem hoc:
    	<BLANKLINE>
    	igitur ne illud quidem.
    	<BLANKLINE>
    	Fortasse id optimum, sed ubi illud:
    	<BLANKLINE>
    	Plus semper voluptatis?
    	<BLANKLINE>
    	Teneo, inquit, finem illi videri nihil dolere.
    	<BLANKLINE>
    	Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    	<BLANKLINE>
    	Si id dicis, vicimus.
    	<BLANKLINE>
    	Inde sermone vario sex illa a Dipylo stadia confecimus.
    	<BLANKLINE>
    	Sin aliud quid voles, postea.
    	<BLANKLINE>
    	Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    	<BLANKLINE>
    	Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

It prints no spaces before nor after the text.

::

	>>> text_indentation("  FirstName   ")
    	FirstName

Prints 2 newline after the punctuation.

::

	>>> text_indentation(" First    .")
    	First.
    	<BLANKLINE>

Testing all three special characters in the text.

    	>>> text_indentation("Hello.how?are:")
    	Hello.
    	<BLANKLINE>
    	how?
    	<BLANKLINE>
    	are:
    	<BLANKLINE>

None Case
=========

None isn't a valid argument for the program.

::

Dosen't accept None as first argument.

::

	>>> text_indentation(None)
    	Traceback (most recent call last):
   	TypeError: text must be a string

Non-Strings
============

Doesn't accept other data types besides strings as an argument.

::

Doesn't accept a inetger as an argument.

::

	>>> text_indentation(1)
    	Traceback (most recent call last):
    	TypeError: text must be a string

Printing a text with special characters

::

	 >>> text_indentation("FirstName: Daniel? Baquero.")
    	 FirstName:
    	 <BLANKLINE>
    	 Daniel?
    	 <BLANKLINE>
    	 Baquero.
    	 <BLANKLINE>

Accepts an integer casted as a string

::

    	>>> text_indentation("87654")
    	87654


Accepts empty text but doesn't print anything.

::

	>>> text_indentation(" ")

Accepts newline as a character

::

    	>>> text_indentation("\n")
    	<BLANKLINE>

Accepts special characters with newlines.

::

	>>> text_indentation("\n:\n.\n?")
    	<BLANKLINE>
    	:
   	<BLANKLINE>
    	<BLANKLINE>
    	.
    	<BLANKLINE>
    	<BLANKLINE>
    	?
    	<BLANKLINE>

Accepts spaces before newline.

::

	>>> text_indentation("   \n")
    	<BLANKLINE>


Accepts spaces after newline.

::

	>>> text_indentation("\n   ")
   	<BLANKLINE>

Arguments
=========

It doesn't accept more than 1 argument.

::

Testing with more than 1 argument.

::

	>>> text_indentation("text", "happy")
	Traceback (most recent call last):
	TypeError: text_indentation() takes 1 positional argument but 2 were given
